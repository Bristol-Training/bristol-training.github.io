---
title: Data Science and Research Software Engineering Training
subtitle: Training in data science, research software engineering and data engineering from the University of Bristol.
toc: true
toc-location: left
include-in-header: 
  - text: <script src="/assets/script.js"></script>
listing:
  - id: fundamentals-courses
    contents: courses/fundamentals.yml
    template: courses/listing.ejs
  - id: python-courses
    contents: courses/python.yml
    template: courses/listing.ejs
  - id: r-courses
    contents: courses/r.yml
    template: courses/listing.ejs
  - id: julia-courses
    contents: courses/julia.yml
    template: courses/listing.ejs
  - id: machine-learning-courses
    contents: courses/machine-learning.yml
    template: courses/listing.ejs
  - id: data-visualisation-courses
    contents: courses/data-visualisation.yml
    template: courses/listing.ejs
  - id: software-engineering-courses
    contents: courses/software-engineering.yml
    template: courses/listing.ejs
  - id: hpc-courses
    contents: courses/hpc.yml
    template: courses/listing.ejs
  - id: c-cpp-fortran-courses
    contents: courses/c-cpp-fortran.yml
    template: courses/listing.ejs
---

We provide **free online training workshops to all University of Bristol staff and students** as part of our university-wide training programme. This includes workshops on data science, coding/programming, use of high performance computing (HPC) and best practices. Our training workshops receive consistently [great feedback from attendees](https://www.bristol.ac.uk/acrc/research-software-engineering/training/training-feedback/).

[Join our training alerts mailing list](https://www.jiscmail.ac.uk/cgi-bin/wa-jisc.exe?SUBED1=BRISTOL-COMPUTING-TRAINING&A=1){.btn .btn-primary}

We offer additional in-person training by arrangement with specific groups, such as centres for doctoral training (CDTs) or doctoral training partnerships (DTPs). For more information, please [contact us](mailto:jgi-training@bristol.ac.uk).

Many of our training materials are also **free for anyone to use** as both self-led courses and pre-recorded videos via the links below. We also link to some external courses, where we think these would be valuable to the University of Bristol community.

## Training schedule

You will be able to book onto courses **4 weeks in advance**, via online booking forms on the course directory. We'll send updates to our mailing list when new booking forms are available. Please make sure you're signed up, if you'd like to get the announcements!

Course                                  | Date                        | Time   | Location | Registration 
----------------------------------------|-----------------------------|--------|----------|--------------
Beginning Python                        | Wednesday 2  October 2024   | 1-4pm  | Online   | [Course Full](){.btn .btn-sm .disabled}
Intermediate Python                     | Wednesday 9  October 2024   | 1-4pm  | Online   | [Course Full](){.btn .btn-sm .disabled}
Intro to Data Analysis in Python        | Wednesday 16 October 2024   | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Beginning R                             | Monday    21 October 2024   | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Intermediate R                          | Wednesday 23 October 2024   | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Intro to Data Analysis in R             | Friday    25 October 2024   | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Best Practices in Software Engineering  | Wednesday 30 October 2024   | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Applied Data Analysis in Python         | Wednesday 6  November 2024  | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Introducing Version Control with Git    | Wednesday 13 November 2024  | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
Parallel Python                         | Wednesday 20 November 2024  | 1-4pm  | Online   | [Registration not yet open](){.btn .btn-sm .disabled}
: {.training-schedule}

## Course directory

- [Fundamentals](#fundamentals)
- [Python](#python)
- [R](#r)
- [Julia](#julia)
- [C, C++ and Fortran](#c-c-and-fortran)
- [Machine learning](#machine-learning)
- [Data visualisation](#data-visualisation)
- [Software engineering](#software-engineering)
- [High performance computing (HPC)](#hpc)

:::{#course-filters}
:::

---

### Fundamentals

These are courses which are not specific to any programming language. They are useful skills to have regardless of the language you are using.

:::{#fundamentals-courses}
:::

---

### Python

Python is a versatile programming language. In research it is often used for simulation, machine learning, and building data pipelines.

:::{#python-courses}
:::

---

### R

R is a programming language most often used for statistics. It has great libraries for data manipulation and visualisation.

:::{#r-courses}
:::

---

### Julia

<!-- TODO: description -->

:::{#julia-courses}
:::

---

### C, C++ and Fortran

<!-- TODO: description -->

:::{#c-cpp-fortran-courses}
:::

---

### Machine learning

<!-- TODO: description -->

:::{#machine-learning-courses}
:::

---

### Data visualisation

<!-- TODO: description -->

:::{#data-visualisation-courses}
:::

---

### Software engineering

Any code you write for research should be maintainable, although we don't think everyone needs to be a software engineer to be a good researcher. These courses can equip you with the skills to write more robust, reusable, and reproducible code.

:::{#software-engineering-courses}
:::

---

### High performance computing (HPC)

HPC is the use of computer clusters (also known as supercomputers) to solve advanced computation problems. These facilities allow you to queue processing jobs on machines that have large amounts of storage, memory or processing power.

:::{#hpc-courses}
:::

---

## Advice for teachers

All of our workshops have enough detail such that they can be studied as self-guided workshops by individuals. When taught, they work best as three-hour workshops with a 5-10 minute break every hour. The best approach is to walk through the material via live-coding, and then giving time for students to complete the exercises that are at the bottom of most pages. The answers are linked. We recommend, if teaching online, that you have both a lead presenter, who talks through the material and live-codes, and a narrator, who types in chat to highlight key points, plus answer text-based questions from students, solve technical issues, or triage questions across to break-out rooms with helpers (if you have any). A lead and narrator together can run classes for about 50-70 students, assuming either that students have already installed any pre-requisite software (such as anaconda python) or you have some helpers around at the start who can help debug any technical issues. We have taught up to 120 students at a time, but recommend for this number that you will need at least 1-2 extra helpers who can work with small groups in break out rooms.

There is in general more material in each course that the average student will get through in the three hours as there is always a wide spread of abilities. Make sure to point out the material will remain online and encourage them to go through it in their own time after the session. We always encourage that students use their own computers / laptops to run the material so that they can more easily carry on afterwards. All of our workshops work well on Windows, MacOS or Linux.

We are in the process of recording videos of our most popular workshops and putting them on YouTube. This should help students refresh material, as well as enabling others to run these workshops using a "virtual trainer".

## Contacts and credits

These courses are maintained and delivered by the teams at the University of Bristol's [Jean Golding Institute](https://www.bristol.ac.uk/golding/) and the [Advanced Computing Research Centre](https://www.bristol.ac.uk/acrc/). If you have any questions, feedback or suggested topics for training (including bespoke training sessions), please [contact us](mailto:jgi-training@bristol.ac.uk).

Many of the courses were originally developed by members of the University of Bristol's Research Software Engineering group, with special thanks to [Christopher Woods](https://chryswoods.com/), [Matt Williams](https://milliams.com/) and Al Tanner.
