[
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "Course directory",
    "section": "",
    "text": "Fundamentals\nThese are courses which are not specific to any programming language. They are useful skills to have regardless of the language you are using.\n\n\n  \n    \n      \n\n      Introduction to the Command Line Interface (CLI)\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Most R and Python users will need to interact with the command line at some point, and a strong foundation really helps.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Harnessing AI\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Learn effective and responsible use of AI chatbots (large language models) at the University.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nPython\nPython is a versatile programming language. In research it is often used for simulation, machine learning, and building data pipelines.\n\n\n  \n    \n      \n\n      Introduction to Python (part 1)\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        From zero python to running your first script. Understanding data types and performing computations.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Introduction to Python (part 2)\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Using packages, writing functions, and learning how to deal with errors you will encounter in analyses.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Beginning Python\n\n      \n    \n  \n    \n      \n\n      Introduction to Data Analysis in Python (Part 1)\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n        \n      \n\n      \n        Learn to use Pandas to query, combine and visualise your data as well as Seaborn to visualise them.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Introduction to Python (part 1)\n\n      \n    \n  \n    \n      \n\n      Introduction to Data Analysis in Python (Part 2)\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n            Machine learning\n          \n        \n      \n\n      \n        Learn to use scikit-learn for classic machine learning tasks.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Introduction to Data Analysis in Python (Part 1)\n\n      \n    \n  \n    \n      \n\n      Introduction to NumPy\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n        \n      \n\n      \n        Learn to use NumPy to process n-dimensional grids of numbers.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Beginning Python\n\n      \n    \n  \n    \n      \n\n      Parallel Python\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Take advantage of the processing power of multicore processors and large compute clusters.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate Python\n\n      \n    \n  \n    \n      \n\n      Accelerating Python\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Learn how to use Numba and Cython to get the speed of C, C++ and Fortran, whilst keeping the convenience of Python.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate Python\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nR\nR is a programming language most often used for statistics. It has great libraries for data manipulation and visualisation.\n\n\n  \n    \n      \n\n      Introduction to R (part 1)\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        From zero R to running your first script. Understanding data types and coding your first calculator!\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Introduction to R (part 2)\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        Understanding how to use packages, write functions, and build complex pipes for analysis.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Beginning R\n\n      \n    \n  \n    \n      \n\n      Introduction to Data Analysis in R\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n        \n      \n\n      \n        Understanding how to use packages, write functions, and build complex pipes for analysis.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate R\n\n      \n    \n  \n    \n      \n\n      Text and Sentiment Analysis in R\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n        \n      \n\n      \n        Learn how to perform text and sentiment analysis tasks in R using the tidyverse collection of packages.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Introduction to Data Analysis in R\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nJulia\n\n\n\n  \n    \n      \n\n      Computational thinking with Julia\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        A 14 week course from MIT.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nC, C++ and Fortran\n\n\n\n  \n    \n      \n\n      Beginning C++\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Learn the basics of C++ modern programming.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Parallel Programming with C++\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        Learn to write modern C++ programs that can take advantage of multicore processors.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Good basic understanding of C++, including loops, functions, containers and classes\n\n      \n    \n  \n    \n      \n\n      Efficient Vectorisation with C++\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        Learn what vectorisation is, and how you can use it to speed up your C++ programs on modern multicore processors.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Good basic understanding of C++, including loops, functions, containers and classes\n\n      \n    \n  \n    \n      \n\n      Fortran1: The basics\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Learn the basics of Fortran programming.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Introduction to Modern Fortran\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        Learn how to use OpenMP to parallelise your C, C++ and Fortran code.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Knowledge of an older standard of Fortran, such as Fortran 77, or intermediate-level C or Python\n\n      \n    \n  \n    \n      \n\n      Advanced Parallel Fortran\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Learn how to use coarrays to parallelise your Fortran code.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate-level Fortran knowledge\n\n      \n    \n  \n    \n      \n\n      Introduction to OpenMP\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Learn how to use OpenMP to parallelise your C, C++ and Fortran code.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate-level C, C++ or Fortran knowledge\n\n      \n    \n  \n    \n      \n\n      OpenMP for Computational Scientists\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Learn how to use OpenMP to parallelise your Fortran code.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate-level Fortran knowledge\n\n      \n    \n  \n    \n      \n\n      Introduction to MPI\n\n      \n        \n          \n            Advanced\n          \n        \n      \n\n      \n        Learn how to use MPI to parallelise your C, C++ and Fortran code.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Intermediate-level C, C++ or Fortran knowledge\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nMachine learning\n\n\n\n  \n    \n      \n\n      Introduction to Data Analysis in Python (Part 2)\n\n      \n        \n          \n            Intermediate\n          \n            Data analysis\n          \n            Machine learning\n          \n        \n      \n\n      \n        Learn to use scikit-learn for classic machine learning tasks.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Introduction to Data Analysis in Python (Part 1)\n\n      \n    \n  \n    \n      \n\n      Introduction to AI\n\n      \n        \n          \n            Intermediate\n          \n            AI\n          \n            Machine learning\n          \n        \n      \n\n      \n        Learn how a neural network is structured, from theory to practical implementation in PyTorch.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Introduction to Data Analysis in Python (Part 2)\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nData visualisation\n\n\n\n  \n    \n      \n\n      Graphical Data Apps in Python\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        Learn to use Streamlit to make an interactive dashboard for your data.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Introduction to Data Analysis in Python\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nSoftware engineering\nAny code you write for research should be maintainable, although we don’t think everyone needs to be a software engineer to be a good researcher. These courses can equip you with the skills to write more robust, reusable, and reproducible code.\n\n\n  \n    \n      \n\n      Version control using Git\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        Git is useful for tracking and navigating through versions of your code.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Git for collaboration using GitHub\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        As well as being useful for versioning your own code, Git is essential for coding collaboratively with others.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Version control using Git\n\n      \n    \n  \n    \n      \n\n      Best practices in software engineering\n\n      \n        \n          \n            Intermediate\n          \n        \n      \n\n      \n        How to write code for an analysis that is robust, understandable and useable by others.\n\n      \n\n      \n\n      \n\n      \n        \n          \n            Course video\n          \n         \n      \n\n      \n        Prerequisites: Recommended intermediate-level experience in, for example, R or Python\n\n      \n    \n  \n    \n      \n\n      IDEs and Debugging\n\n      \n        \n          \n            Beginner\n          \n        \n      \n\n      \n        IDEs are software used to edit, run, and debug code. They have useful features which make your work easier.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Recommended beginner-level experience in, for example, R or Python\n\n      \n    \n  \n\nNo matching items\n\n\n\n\nHigh performance computing (HPC)\nHPC is the use of computer clusters (also known as supercomputers) to solve advanced computation problems. These facilities allow you to queue processing jobs on machines that have large amounts of storage, memory or processing power.\n\n\n  \n    \n      \n\n      Introduction to HPC\n\n      \n        \n          \n            Beginner\n          \n            HPC\n          \n        \n      \n\n      \n        Learn what high performance computing is, the HPC facilities at the University and how to get help.\nMembers of the University can also watch on Microsoft Stream.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Inroduction to Linux\n\n      \n        \n          \n            Beginner\n          \n            HPC\n          \n            University only\n          \n        \n      \n\n      \n        Elementary introduction to using Linux, for example on the University HPC.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: None\n\n      \n    \n  \n    \n      \n\n      Further Linux\n\n      \n        \n          \n            Intermediate\n          \n            HPC\n          \n            University only\n          \n        \n      \n\n      \n        Expands on the basic concepts and introduces additional commands useful to researchers in a HPC environment.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Introduction to Linux, or experience navigating between directories, creating new files and directories, manipulating files and using pipes and pipelines\n\n      \n    \n  \n    \n      \n\n      Introduction to HPC with Slurm\n\n      \n        \n          \n            Intermediate\n          \n            HPC\n          \n            University only\n          \n        \n      \n\n      \n        An introduction to Linux and to our HPC clusters. It will help with creating bash scripts, HPC submission scripts and submitting jobs to the queue systems.\n\n      \n\n      \n\n      \n\n      \n\n      \n        Prerequisites: Access to BlueCrystal or BluePebble\n\n      \n    \n  \n\nNo matching items\n\n\nMany of the courses were originally developed by members of the University of Bristol’s Research Software Engineering group, with special thanks to Christopher Woods, Matt Williams and Al Tanner.",
    "crumbs": [
      "Course directory"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Science and Research Software Engineering Training",
    "section": "",
    "text": "Upcoming courses\n\n\nUniversity of Bristol staff and students can book onto courses via our online booking forms.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourse directory\n\n\nMany of our training materials are also free for anyone to use as both self-led courses and pre-recorded videos.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoin our mailing list\n\n\nSign up to our training alerts mailing list to get announcements when new courses become available.\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\nWe offer additional in-person training by arrangement with specific groups, such as centres for doctoral training (CDTs) or doctoral training partnerships (DTPs). For more information, please contact us.",
    "crumbs": [
      "About the training"
    ]
  },
  {
    "objectID": "upcoming.html",
    "href": "upcoming.html",
    "title": "Upcoming courses",
    "section": "",
    "text": "Please see below for a list of training sessions run by the Jean Golding Institute. These sessions are open to all University of Bristol staff and students – please book via the Eventbrite links below for each course.\nWe’ll send updates to our training alerts mailing list when new booking forms are available. Make sure you’re signed up, if you’d like to get the announcements!\nFor more information or if you have any questions, please contact us.\n\n\n\n\n\n\n\n    \n\n\n\nCourse\nDate\nTime\nLocation\nLinks\n\n\n\n\nTraining course Introduction to Python (part 1)\nSep 29, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Introduction to Python (part 2)\nOct 1, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Data Analysis in Python (part 1)\nOct 6, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Harnessing AI\nOct 8, 2025\n2-5pm\nOnline\nCourse details to follow\n\n\nTraining course Best Practices in Software Engineering\nOct 13, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course High Performance Computing\nOct 15, 2025\n2-5pm\nOnline\nCourse details to follow\n\n\nTraining course Data Analysis in Python (part 2)\nOct 20, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Introduction to R (part 1)\nOct 27, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Introduction to R (part 2)\nOct 29, 2025\n2-5pm\nOnline\nRegister\n\n\nTraining course Data Analysis in R\nOct 30, 2025\n1-4pm\nOnline\nRegister\n\n\nTraining course Introduction to AI\nNov 10, 2025\n2-5pm\nOnline\nRegister\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Upcoming courses"
    ]
  },
  {
    "objectID": "mailing-list.html",
    "href": "mailing-list.html",
    "title": "Join our mailing list",
    "section": "",
    "text": "We send announcements to our training alerts mailing list when new courses become available. Make sure you’re signed up, if you’d like to get the announcements!\nJoin our training alerts mailing list\nFor more information or if you have any questions, please contact us.",
    "crumbs": [
      "Join our mailing list"
    ]
  },
  {
    "objectID": "lunch-and-learn.html",
    "href": "lunch-and-learn.html",
    "title": "Lunch and Learn talks",
    "section": "",
    "text": "You can watch recordings of all our lunch and learn talks on our YouTube playlist, or by searching for an individual talk below.\nPlay all lunch and learns on YouTube\nIf you’d like to volunteer to give a lunch and learn talk, please contact us.",
    "crumbs": [
      "Lunch and Learn talks"
    ]
  },
  {
    "objectID": "lunch-and-learn.html#talk-archive",
    "href": "lunch-and-learn.html#talk-archive",
    "title": "Lunch and Learn talks",
    "section": "Talk archive",
    "text": "Talk archive",
    "crumbs": [
      "Lunch and Learn talks"
    ]
  },
  {
    "objectID": "advice.html",
    "href": "advice.html",
    "title": "Advice for teachers",
    "section": "",
    "text": "All of our workshops have enough detail such that they can be studied as self-guided workshops by individuals, or used in taught workshops. Some of the workshops are also available as recorded videos.\nAll of our workshops work well on Windows, Mac or Linux.",
    "crumbs": [
      "Advice for teachers"
    ]
  },
  {
    "objectID": "advice.html#when-used-for-workshops",
    "href": "advice.html#when-used-for-workshops",
    "title": "Advice for teachers",
    "section": "When used for workshops",
    "text": "When used for workshops\nThe material works best as three-hour workshops with a 10-15 minute break every hour. The best approach is to walk through the material via live-coding, and then giving time for learners to complete the exercises that are at the bottom of most pages. The answers are linked.\n\nOnline courses\nWe recommend, if teaching online, that you have:\n\nA lead presenter, who talks through the material and live-codes.\nA second presenter or narrator, who types in chat to highlight key points, answer text-based questions from learners, solve technical issues, or triage questions across to break-out rooms.\nAt the start of the beginner courses, helpers that can debug problems in breakout rooms.\n\nThe lead and second presenter/narrator may alternate roles through the course.\nA lead and narrator together can run classes for about 50-70 learners, assuming either that learners have already installed any pre-requisite software (such as Python) or you have helpers to debug any technical issues. We have taught up to 120 learners at a time, but recommend for this number that you will need at least 1-2 extra helpers who can work with small groups in break out rooms.\n\n\nStretch goals\nThere is in general more material in each course that the average student will get through in the three hours as there is always a wide spread of abilities. Make sure to point out the material will remain online and encourage them to go through it in their own time after the session. We always encourage that learners use their own computers / laptops to run the material so that they can more easily carry on afterwards.",
    "crumbs": [
      "Advice for teachers"
    ]
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contacts",
    "section": "",
    "text": "These courses are maintained and delivered by the teams at the University of Bristol’s Jean Golding Institute and the Advanced Computing Research Centre.\nIf you have any questions, feedback or suggested topics for training (including bespoke training sessions), please contact us at: jgi-training@bristol.ac.uk.",
    "crumbs": [
      "Contacts"
    ]
  }
]